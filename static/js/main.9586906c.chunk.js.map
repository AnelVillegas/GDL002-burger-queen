{"version":3,"sources":["components/ButtonHome.js","components/Home.js","firebase/startFb.js","components/ClientName.js","components/Order.js","components/Breakfast.js","components/Lunch.js","components/Kitchen.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["Button","react_default","a","createElement","className","react_router_dom","to","Home","props","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ClientName","type","placeholder","Order","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","deleteItem","e","i","clickDelete","inherits","createClass","key","value","_this2","menuList","map","menu","item","price","onClick","React","Component","showBreakfastMenu","state","Breakfast","Lunch","orders","total","submit","bind","assertThisInitialized","sumOrder","database","ref","on","snapshot","Breakfast1","val","newStateBreakfast","Breakfast2","push","id","Name","Options","Price","setState","_this3","order","toConsumableArray","preventDefault","prevState","filter","element","items","el","reduce","sum","result","_this4","components_ClientName","react","menuDetail","components_Order","showLunchMenu","Lunch1","newStateLunch","Lunch2","Kitchen","title","Navbar","href","App","components_Navbar","react_router","exact","path","component","render","components_Kitchen","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9586906c.chunk.js","sourcesContent":["import React from  'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Button = () => {\r\n   \r\n    return(\r\n        <ul className=\"button-menu\">\r\n        <li><Link className=\"button\" to=\"/Breakfast\">DESAYUNO</Link></li>\r\n        <li><Link className=\"button\" to=\"/Lunch\" >COMIDA/CENA</Link></li>\r\n        </ul>\r\n    );\r\n};\r\n\r\n\r\nexport default Button","import React from 'react';\r\n\r\n\r\n\r\n\r\nconst Home = (props) => (\r\n \r\n<div className = \"main-content\">\r\n  <div className= \"container\">\r\n  \r\n  <div className= \"home-image\"></div>\r\n  </div>\r\n  \r\n\r\n</div>\r\n\r\n\r\n);\r\n\r\nexport default Home;","import * as firebase from 'firebase';\r\n\r\n  // Your web app's Firebase configuration\r\n  const firebaseConfig = {\r\n    apiKey: \"AIzaSyA8-M8H46cu-Lqv6u6ug7nTAh_nE9NVHRs\",\r\n    authDomain: \"burguer-queen-45fb5.firebaseapp.com\",\r\n    databaseURL: \"https://burguer-queen-45fb5.firebaseio.com\",\r\n    projectId: \"burguer-queen-45fb5\",\r\n    storageBucket: \"burguer-queen-45fb5.appspot.com\",\r\n    messagingSenderId: \"861387369840\",\r\n    appId: \"1:861387369840:web:2db09a331c765e75\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  export default firebase;\r\n","import React from 'react';\r\nimport  { Fragment } from 'react';\r\n\r\nconst ClientName = () =>{\r\n    return (\r\n        <div>\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"Nombre del cliente\"></input>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClientName;","import React from \"react\";\r\n\r\nexport class Order extends React.Component{\r\n\r\n     deleteItem = (e,i) => {\r\n\r\n        this.props.clickDelete(e,i)\r\n\r\n     }\r\n    render(){\r\n        const Order = this.props.menuList.map((menu, i) => {\r\n            return(\r\n                <li key={i} className=\"list-group-item d-flex justify-content-between align-items-center col-md-8\">\r\n                    <p>{menu.item}</p>\r\n                        <span>{\"$\"+ menu.price}</span>\r\n                        <button className=\"btn btn-outline-danger col-md-1\" onClick={(e) => this.deleteItem(e,menu)}>x</button>\r\n                </li>\r\n            )\r\n            })\r\n        return(\r\n            Order\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Order;","\r\nimport React, { Fragment, Component } from 'react';\r\n\r\nimport firebase from '../firebase/startFb';\r\nimport ClientName from './ClientName';\r\nimport Order from './Order';\r\n\r\nclass showBreakfastMenu extends Component  {\r\n  constructor () {\r\n    super()\r\n    this.state = {\r\n      Breakfast:[],\r\n      Lunch: [],\r\n      orders:[],\r\n      total: 0,\r\n    };\r\n    this.submit = this.submit.bind(this);\r\n    this.sumOrder = this.sumOrder.bind(this);\r\n    this.deleteItem=this.deleteItem.bind(this);\r\n  };\r\n  \r\n  componentDidMount(){\r\n    const BreakfastRef = firebase.database().ref('Breakfast');\r\n    BreakfastRef.on('value',(snapshot)=>{\r\n      let Breakfast1 = snapshot.val();\r\n      let newStateBreakfast = [];\r\n      for (let Breakfast2 in Breakfast1){\r\n        newStateBreakfast.push({\r\n          id:Breakfast2,\r\n          Name:Breakfast1[Breakfast2].Name,\r\n          Options:Breakfast1[Breakfast2].Options,\r\n          Price:Breakfast1[Breakfast2].Price\r\n        });\r\n      }\r\n      this.setState({\r\n        Breakfast: newStateBreakfast\r\n      });\r\n    });\r\n  }\r\n\r\n  submit (item, price){\r\n     const order={\r\n       item:item,\r\n       price: price\r\n     }\r\n     this.setState({\r\n         orders:[...this.state.orders,order]\r\n     },() => this.sumOrder())\r\n\r\n  };\r\n\r\n  deleteItem(e,menu){\r\n    e.preventDefault(e)\r\n    this.setState(prevState => ({\r\n      orders: prevState.orders.filter(element=> element !==menu)\r\n    }))\r\n  } \r\n  \r\n\r\n  sumOrder (){\r\n    const priceArr =  this.state.orders.map ((el)=>el.price)\r\n    const items = priceArr.reduce((sum,result)=>{\r\n      return sum + result;\r\n    });\r\n    this.setState ({\r\n      total: items\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n  return ( \r\n     \r\n        <div className=\"row no-gutters\">\r\n        <ClientName/>\r\n          <div className=\"col\">\r\n         \r\n            <br/>\r\n            <h5 className=\"card-title\">Desayuno</h5>\r\n            <br/>\r\n            <br/>\r\n            <Fragment >{this.state.Breakfast.map((menuDetail,i) =>\r\n\r\n              <div key={i} className=\"list-group list-group-flush col mt-4\">\r\n              <button className=\"list-group-item left d-flex justify-content-between align-items-center col-md-8\" onClick={()=>{\r\n                this.submit(menuDetail.Name, menuDetail.Price);\r\n              }}>\r\n            \r\n                    <ul>\r\n                      <div className=\"card-text-center\">\r\n                        <div>\r\n                          \r\n                          <p className=\"card-text\">{menuDetail.Name} {\"$\"+menuDetail.Price} </p>\r\n                          \r\n                          \r\n                        </div>\r\n                      </div>\r\n                    </ul>\r\n\r\n              </button>\r\n              </div>\r\n              )      \r\n              \r\n              \r\n            })\r\n                \r\n            </Fragment>\r\n            </div>\r\n            \r\n            <div className=\"col\">\r\n              <br/>\r\n            <h5 className=\"card-title\">Orden</h5>\r\n              <br/>\r\n              <br/>\r\n              <ul className=\"card-body-right col-md-12\">\r\n               <Order className=\"card-body-right col-md-8\" menuList={this.state.orders} clickDelete={this.deleteItem}/>\r\n              </ul>\r\n              <p className=\"card-body-right col-md-8\" >{\"Total\" + \"$\" + this.state.total}</p>\r\n            {/*<div onClick = { this.sumOrder}>Total: ${this.state.total} </div>*/}\r\n            \r\n           </div>\r\n           </div>\r\n       \r\n   \r\n  )\r\n }\r\n}\r\n\r\n\r\n\r\nexport default showBreakfastMenu;\r\n","import React, {Fragment, Component} from 'react';\r\nimport firebase from '../firebase/startFb';\r\nimport ClientName from './ClientName';\r\nimport Order from './Order';\r\n\r\nclass showLunchMenu extends Component  {\r\n  constructor () {\r\n    super();\r\n    this.state = {\r\n      Breakfast:[],\r\n      Lunch: [],\r\n      orders:[],\r\n      total: 0,\r\n    };\r\n    this.submit = this.submit.bind(this);\r\n    this.sumOrder = this.sumOrder.bind(this);\r\n    this.deleteItem=this.deleteItem.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    const LunchRef = firebase.database().ref('Lunch');\r\n    LunchRef.on('value',(snapshot)=>{\r\n      let Lunch1 = snapshot.val();\r\n      let newStateLunch = [];\r\n      for (let Lunch2 in Lunch1){\r\n        newStateLunch.push({\r\n          id:Lunch2,\r\n          Name:Lunch1[Lunch2].Name,\r\n          Options:Lunch1[Lunch2].Options,\r\n          Price:Lunch1[Lunch2].Price\r\n        });\r\n      }\r\n      this.setState({\r\n        Lunch: newStateLunch\r\n      });\r\n    });\r\n  }\r\n  submit (item, price){\r\n    const order={\r\n      item:item,\r\n      price: price\r\n    }\r\n    this.setState({\r\n        orders:[...this.state.orders,order]\r\n    },() => this.sumOrder())\r\n }\r\n deleteItem(e,menu){\r\n  e.preventDefault(e)\r\n  this.setState(prevState => ({\r\n    orders: prevState.orders.filter(element=> element !==menu)\r\n  }))\r\n} \r\n\r\n sumOrder (){\r\n   const priceArr =  this.state.orders.map ((el)=>el.price)\r\n   const items = priceArr.reduce((sum,result)=>{\r\n     return sum + result;\r\n   });\r\n   this.setState ({\r\n     total:items\r\n   });\r\n };\r\n\r\n \r\n\r\n  render() {\r\n  return (\r\n   \r\n      <div className=\"row no-gutters\">\r\n      <ClientName/>\r\n        <div className=\"col\">\r\n         <br/>\r\n         <h5 className=\"card-title\">Comida/Cena</h5>\r\n          <br/>\r\n          <br/> \r\n          <Fragment>{this.state.Lunch.map((menuDetail,i) =>\r\n           \r\n            <div key={i} className=\"list-group list-group-flush col mt-4\">\r\n           \r\n             <button className=\"list-group-item left d-flex justify-content-between align-items-center col-md-8\" onClick={()=>{\r\n                this.submit(menuDetail.Name, menuDetail.Price);\r\n              }} type=\"submit\">\r\n            <ul>\r\n              <p className=\"card-text-center\">\r\n                <div>\r\n                \r\n                  <p className=\"card-text\"> {menuDetail.Name} {\"$\" +menuDetail.Price}</p>\r\n                </div>\r\n              </p>\r\n            </ul>\r\n       \r\n             </button>\r\n            </div>\r\n               \r\n         )}\r\n\r\n        </Fragment>\r\n      </div>  \r\n      <div className=\"col\">\r\n              <br/>\r\n            <h5 className=\"card-title\">Orden</h5>\r\n              <br/>\r\n              <br/>\r\n              <ul className=\"card-body-right col-md-12\">\r\n                \r\n               <Order className=\"card-body-right col-md-8\" menuList={this.state.orders} clickDelete={this.deleteItem}/>\r\n              </ul>\r\n              <p className=\"card-body-right col-md-8\" >{\"Total\" + \"$\" + this.state.total}</p>\r\n            \r\n           </div>\r\n       </div> \r\n    \r\n  )    \r\n  \r\n \r\n     \r\n}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default showLunchMenu;\r\n","import React from 'react';\r\n\r\nconst Kitchen = (props) => (\r\n    <div className = \"main-content\">\r\n    <div className= \"container\">\r\n    <h2 className= \"title\">{props.title}</h2>\r\n    </div>\r\n  </div>\r\n  \r\n\r\n);\r\n\r\n\r\n\r\nexport default Kitchen;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Navbar = (props) => (\r\n\r\n    <nav>\r\n      <h2 className=\"logo\"><a className=\"logo-link\" href=\"#\">{props.title}</a></h2>\r\n      <ul className=\"nav-menu\">\r\n        <li><Link className=\"nav-menu__link\" to=\"/\">Inicio</Link></li>\r\n        <li><Link className=\"nav-menu__link\" to=\"/Kitchen\">Cocina</Link></li>\r\n       </ul>\r\n  </nav>\r\n);\r\n\r\n\r\nexport default Navbar;","import React, {Component} from 'react';\nimport {BrowserRouter,Route} from 'react-router-dom';\nimport './App.css';\nimport Button from './components/ButtonHome';\nimport Home from './components/Home';\nimport Breakfast from './components/Breakfast';\nimport Lunch from './components/Lunch';\nimport  Kitchen from './components/Kitchen';\nimport Navbar from './components/Navbar';\n\n\nclass App extends Component {\n  render () {\n  return (\n    <BrowserRouter>\n     <div className=\"App\">\n       \n      <Navbar title= \"ORDENES\" />\n      <Route exact path=\"/\"component={Home}/> \n      <Route exact path=\"/Breakfast\" render={() => <Breakfast title=\"Desayunos\"/> } />\n      <Route exact path=\"/Lunch\" render={() => <Lunch title=\"Comida / Cena\"/>} />\n      <Route exact path=\"/Kitchen\" render={() => <Kitchen title=\"Ordenes\"/> } />\n      <Route exact path=\"/\"component={Button}/>\n   \n      \n     </div>\n     \n    \n    </BrowserRouter>\n  );\n }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}